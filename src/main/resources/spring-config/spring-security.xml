<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
			http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<context:annotation-config />

	<bean id="passwordEncoder"
		class="org.springframework.security.crypto.password.StandardPasswordEncoder">
		<constructor-arg value="qweaf2435AhadfzafPL984" />
	</bean>

	<security:authentication-manager id="authenticationManager">
		<security:authentication-provider user-service-ref="userService">
			<security:password-encoder ref="passwordEncoder"></security:password-encoder>
		</security:authentication-provider>
	</security:authentication-manager>

	<security:http realm="Protected API" use-expressions="true"
		auto-config="false" create-session="stateless" entry-point-ref="unauthorizedEntryPoint"
		authentication-manager-ref="authenticationManager">
	<!--	<security:intercept-url pattern="/**" requires-channel="https" /> -->
		<security:custom-filter ref="authenticationTokenProcessingFilter" position="FORM_LOGIN_FILTER" />
		<security:intercept-url pattern="/api/users/authenticate" access="permitAll" />
	<!--	<security:intercept-url method="GET" pattern="/api/users/account/**" access="hasRole('user')" />
		<security:intercept-url method="GET" pattern="/api/adverts/new" access="hasRole('user')" />
		<security:intercept-url method="POST" pattern="/api/comments/advert/**" access="hasRole('user')" />
	-->
	</security:http>
</beans>