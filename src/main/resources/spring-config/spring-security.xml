<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
			http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<context:annotation-config />

	<bean id="objectReferenceDecoder" class="org.owasp.esapi.reference.RandomAccessReferenceMap" />

	<bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

	<bean id="authenticationTokenProcessingFilter" class="pl.demo.core.service.security.AuthenticationTokenProcessingFilter"/>

	<bean id="unauthorizedEntryPoint" class="pl.demo.core.service.security.UnauthorizedEntryPoint" />

	<security:global-method-security pre-post-annotations="enabled" proxy-target-class="false" order="0" />

	<security:authentication-manager id="authenticationManager">
		<security:authentication-provider user-service-ref="authenticationService">
			<security:password-encoder ref="passwordEncoder"></security:password-encoder>
		</security:authentication-provider>
	</security:authentication-manager>

	<security:http realm="Protected API" use-expressions="true"
		auto-config="false" create-session="stateless" entry-point-ref="unauthorizedEntryPoint"
		authentication-manager-ref="authenticationManager">
	    <security:custom-filter ref="authenticationTokenProcessingFilter" position="FORM_LOGIN_FILTER"/>
		<!-- non-secured (login, registration, dashboard) -->
		<security:intercept-url method="POST" pattern="/api/authentication" access="isAnonymous()"/>
		<security:intercept-url method="POST" pattern="/api/account" access="isAnonymous()"/>
		<security:intercept-url method="GET" pattern="/api/account" access="isAnonymous()"/>
		<security:intercept-url pattern="/api/dashboard" access="isAnonymous() or isAuthenticated()"/>

		<security:intercept-url method="POST" pattern="/api/dictionary/*" access="isAnonymous()"/>

		<security:intercept-url pattern="/api/**" access="isAuthenticated()"/>
	</security:http>

    <!-- Browser shows the popup window for both
    1. Basic authorization header:Authorization Basic Base64

	<security:http-basic/>  -> BasicAuthenticationFilter

	<bean id="authenticationEntryPoint"
		  class="org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint">
		<property name="realmName" value="Name Of Your Realm"/>
	</bean>

    2. Digest Authentication (cons: password in db have to be in plain text mode !!!)

    <security:custom-filter ref="digestFilter" after="BASIC_AUTH_FILTER" />

	<bean id="digestFilter"
				class="org.springframework.security.web.authentication.www.DigestAuthenticationFilter">
		<property name="userDetailsService" ref="authenticationService" />
		<property name="authenticationEntryPoint" ref="digestEntryPoint" />
	</bean>
	<bean id="digestEntryPoint"
				class="org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint">
		<property name="realmName" value="Contacts Realm via Digest Authentication" />
		<property name="key" value="acegi" />
	</bean>
-->
</beans>